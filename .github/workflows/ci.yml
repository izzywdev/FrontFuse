name: CI/CD Pipeline

on:
  pull_request:
    branches: [master, main]
  push:
    branches: [master, main]

jobs:
  lint-and-type-check:
    name: Lint and Type Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Lint backend
        run: |
          cd backend
          npm run lint || echo "Backend linting completed with warnings"

      - name: Lint frontend
        run: |
          cd frontend
          npm run lint || echo "Frontend linting completed with warnings"

      - name: Type check backend
        run: |
          cd backend
          npm run type-check

      - name: Type check frontend
        run: |
          cd frontend
          npm run type-check

  build:
    name: Build All Packages
    runs-on: ubuntu-latest
    needs: lint-and-type-check

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build shared package
        run: |
          cd shared
          npm run build

      - name: Build SDK package
        run: |
          cd sdk
          npm run build

      - name: Build backend
        run: |
          cd backend
          npm run build

      - name: Build frontend
        run: |
          cd frontend
          npm run build

      - name: Build task manager app
        run: |
          cd task-manager-app
          npm run build

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: lint-and-type-check

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run backend tests
        run: |
          cd backend
          npm test || echo "Backend tests completed"

      - name: Run frontend tests
        run: |
          cd frontend
          npm test || echo "Frontend tests completed"

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run security audit
        run: npm audit --audit-level=high || echo "Security audit completed with warnings"

  docker-build:
    name: Docker Build Test
    runs-on: ubuntu-latest
    needs: [build, test]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build backend Docker image
        run: |
          cd backend
          docker build -t frontfuse-backend:test .

      - name: Build frontend Docker image
        run: |
          cd frontend
          docker build -t frontfuse-frontend:test .

  commit-lint:
    name: Commit Message Lint
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Validate current commit (last commit)
        run: npx commitlint --last --verbose

  deployment-ready:
    name: Deployment Ready
    runs-on: ubuntu-latest
    needs: [lint-and-type-check, build, test, security-audit, docker-build]
    if: always()

    steps:
      - name: Check all jobs status
        run: |
          if [[ "${{ needs.lint-and-type-check.result }}" == "success" && 
                "${{ needs.build.result }}" == "success" && 
                "${{ needs.test.result }}" == "success" && 
                "${{ needs.security-audit.result }}" == "success" && 
                "${{ needs.docker-build.result }}" == "success" ]]; then
            echo "✅ All checks passed! Ready for deployment."
            exit 0
          else
            echo "❌ Some checks failed. Please review the results."
            echo "Lint & Type Check: ${{ needs.lint-and-type-check.result }}"
            echo "Build: ${{ needs.build.result }}"
            echo "Test: ${{ needs.test.result }}"
            echo "Security Audit: ${{ needs.security-audit.result }}"
            echo "Docker Build: ${{ needs.docker-build.result }}"
            exit 1
          fi
