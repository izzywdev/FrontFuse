version: '3.8'

services:
  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: fuzefront-website-backend
    environment:
      - NODE_ENV=production
      - PORT=3001
      - FRONTEND_URL=https://fuzefront.com
      - EMAIL_USER=${EMAIL_USER}
      - EMAIL_PASS=${EMAIL_PASS}
      - EMAIL_FROM=${EMAIL_FROM:-noreply@fuzefront.com}
      - EMAIL_TO=${EMAIL_TO:-contact@fuzefront.com}
    networks:
      - fuzefront-website
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - VITE_API_URL=https://fuzefront.com
    container_name: fuzefront-website-frontend
    depends_on:
      - backend
    networks:
      - fuzefront-website
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Nginx Reverse Proxy with SSL
  nginx:
    image: nginx:alpine
    container_name: fuzefront-website-nginx
    depends_on:
      - frontend
      - backend
    volumes:
      - ./nginx/nginx.prod.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
    ports:
      - "80:80"
      - "443:443"
    networks:
      - fuzefront-website
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "https://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  fuzefront-website:
    driver: bridge
    name: fuzefront-website