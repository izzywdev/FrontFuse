#!/bin/bash

# AI Workflow Agent Setup Script
# This script helps set up the AI Workflow Agent system

set -e

echo "ü§ñ AI Workflow Agent Setup"
echo "========================="

# Check if running in correct directory
if [ ! -f "package.json" ]; then
    echo "‚ùå Error: Please run this script from the ai-workflow-agent directory"
    exit 1
fi

# Check Node.js version
echo "üìã Checking Node.js version..."
NODE_VERSION=$(node --version | cut -d'v' -f2 | cut -d'.' -f1)
if [ "$NODE_VERSION" -lt "18" ]; then
    echo "‚ùå Error: Node.js 18 or higher is required (current: $(node --version))"
    exit 1
fi
echo "‚úÖ Node.js version: $(node --version)"

# Check required tools
echo "üìã Checking required tools..."
command -v git >/dev/null 2>&1 || { echo "‚ùå Error: git is required but not installed"; exit 1; }
command -v curl >/dev/null 2>&1 || { echo "‚ùå Error: curl is required but not installed"; exit 1; }
echo "‚úÖ Required tools available"

# Create necessary directories
echo "üìÅ Creating directories..."
mkdir -p logs
mkdir -p ../docs/chats
echo "‚úÖ Directories created"

# Copy environment template
echo "‚öôÔ∏è  Setting up environment..."
if [ ! -f ".env" ]; then
    cp .env.example .env
    echo "‚úÖ Environment template copied to .env"
    echo "üìù Please edit .env with your configuration"
else
    echo "‚úÖ .env file already exists"
fi

# Install dependencies
echo "üì¶ Installing dependencies..."
npm install
echo "‚úÖ Dependencies installed"

# Build the application
echo "üî® Building application..."
npm run build
echo "‚úÖ Application built"

# Check environment variables
echo "üîç Checking environment configuration..."
if [ -f ".env" ]; then
    source .env
    
    # Check required variables
    MISSING_VARS=()
    
    [ -z "$ANTHROPIC_API_KEY" ] && MISSING_VARS+=("ANTHROPIC_API_KEY")
    [ -z "$GITHUB_TOKEN" ] && MISSING_VARS+=("GITHUB_TOKEN")
    [ -z "$WEBHOOK_SECRET" ] && MISSING_VARS+=("WEBHOOK_SECRET")
    
    if [ ${#MISSING_VARS[@]} -gt 0 ]; then
        echo "‚ö†Ô∏è  Missing required environment variables:"
        for var in "${MISSING_VARS[@]}"; do
            echo "   - $var"
        done
        echo "üìù Please update your .env file with the missing variables"
    else
        echo "‚úÖ All required environment variables are set"
    fi
fi

# Test the application
echo "üß™ Testing application..."
if npm test 2>/dev/null; then
    echo "‚úÖ Tests passed"
else
    echo "‚ö†Ô∏è  Tests not configured or failed"
fi

# Setup instructions
echo ""
echo "üöÄ Setup Complete!"
echo "=================="
echo ""
echo "Next steps:"
echo "1. Configure your .env file with:"
echo "   - ANTHROPIC_API_KEY (get from https://console.anthropic.com/)"
echo "   - GITHUB_TOKEN (create at https://github.com/settings/tokens)"
echo "   - WEBHOOK_SECRET (generate a secure random string)"
echo ""
echo "2. Start the development server:"
echo "   npm run dev"
echo ""
echo "3. For production deployment:"
echo "   docker-compose up -d"
echo ""
echo "4. Configure GitHub webhook:"
echo "   - Go to your repository Settings ‚Üí Webhooks"
echo "   - Add webhook URL: https://your-domain.com/webhook/workflow-failure"
echo "   - Content type: application/json"
echo "   - Secret: your WEBHOOK_SECRET"
echo "   - Events: Workflow runs"
echo ""
echo "5. Add GitHub secrets:"
echo "   - AI_AGENT_WEBHOOK_URL=https://your-domain.com/webhook/workflow-failure"
echo "   - AI_AGENT_WEBHOOK_SECRET=your-webhook-secret"
echo ""
echo "üìö For detailed instructions, see README.md"
echo "üêõ For troubleshooting, check logs/ directory"
echo ""
echo "üéâ AI Workflow Agent is ready to handle your workflow failures!"